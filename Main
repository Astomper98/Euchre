import Euchre_game
import RandomPlayer

suits = ['S', 'C', 'H', 'D']
suits_from_letters = {'S': 'Spades', 'C': 'Clubs', 'D': 'Diamonds', 'H': 'Hearts'}


def play_game():
    game_score = [0, 0]
    dealer = Euchre_game.decide_first_dealer()
    while game_score:
        game_score = update_game_score(game_score, play_hand(dealer))
        dealer = (dealer + 1) % 5
        print(dealer)
        if dealer == 0:
            dealer = 1
    return True


def play_hand(dealer):
    trick_score = [0, 0]
    team_1 = [1, 3]
    print('player{} is the dealer'.format(dealer))
    hands = Euchre_game.deal_cards()
    player1 = RandomPlayer.RandomPlayer(hands[0], hands[4])
    player2 = RandomPlayer.RandomPlayer(hands[1], hands[4])
    player3 = RandomPlayer.RandomPlayer(hands[2], hands[4])
    player4 = RandomPlayer.RandomPlayer(hands[3], hands[4])

    trump, caller = determine_trump(dealer, player1, player2, player3, player4, hands[4])
    leader = dealer + 1
    if leader == 5:
        leader = 1
    print('player{} leads'.format(leader))
    winner = play_trick(leader, trump, player1, player2, player3, player4)
    trick_score = new_trick_score(winner, trick_score)

    for i in range(4):
        winner = play_trick(winner, trump, player1, player2, player3, player4)
        trick_score = new_trick_score(winner, trick_score)

    return hand_score(caller, trick_score, team_1)


def determine_trump(dealer, player1, player2, player3, player4, up_card):
    player_dictionary = {1: player1, 2: player2, 3: player3, 4: player4}
    print('{} is up'.format(up_card))
    count = 0
    called = False
    dealer1 = dealer
    trump = ''
    while not called and count < 4:
        print('player{}:'.format((dealer1 % 4) + 1))
        called = player_dictionary[(dealer1 % 4) + 1].pick_or_pass(up_card)
        dealer1 += 1
        count += 1
    if called:
        trump = up_card[1]
        caller = ((dealer1 - 1) % 4) + 1
        player_dictionary[dealer].pick_and_replace()
        print('''{} is trump
        '''.format(suits_from_letters[trump]))
        return [trump, caller]
    while not called and count < 7:
        print('player{}:'.format((dealer1 % 4) + 1))
        called = player_dictionary[(dealer1 % 4) + 1].call_or_pass(up_card)
        dealer1 += 1
        count += 1
    if called:
        trump = called
        caller = ((dealer1 - 1) % 4) + 1
        print('''{} is trump
        '''.format(suits_from_letters[trump]))
        return [trump, caller]
    else:
        print('player{}:'.format(dealer))
        trump = player_dictionary[dealer].call_or_pass(up_card, True)
        caller = dealer
        print('''{} is trump
        '''.format(suits_from_letters[trump]))
        return [trump, caller]


def play_trick(leader, trump, player1, player2, player3, player4):
    player_dictionary = {0: player1, 1: player2, 2: player3, 3: player4}
    player = leader - 1
    trick = ['', '', '', '']
    trick[player] = player_dictionary[player].lead_trick()
    led = trick[player][1]
    for i in range(1, 4):
        trick[(player + i) % 4] = player_dictionary[(player + i) % 4].follow_trick(led, trump)
    print('''
                Player3
                  {}
      Player2 {}      {} Player4          
                  {} 
                Player1
                '''.format(trick[2], trick[1], trick[3], trick[0]))
    winner = Euchre_game.determine_trick_winner(trick, trump, led)
    return winner


def new_trick_score(winner, score):
    n_score = score
    if winner == 1 or winner == 3:
        n_score[0] += 1
    else:
        n_score[1] += 1
    print('The trick score is now Team 1/3: {} Team 2/4: {}'.format(n_score[0], n_score[1]))
    return n_score


def hand_score(caller, trick_score, team_1):
    if caller in team_1 and trick_score[0] == 5:
        print('Team 1/3 wins 2 points')
        return [2, 0]
    elif caller in team_1 and trick_score[0] >= 3:
        print('Team 1/3 wins 1 point')
        return [1, 0]
    elif caller in team_1 or trick_score[0] == 0:
        print('Team 2/4 wins 2 points')
        return [0, 2]
    elif trick_score[0] >= 3:
        print('Team 1/3 wins 2 points')
        return [2, 0]
    else:
        print('Team 2/4 wins 1 point')
        return [0, 1]


def update_game_score(game_score, trick_score):
    game_score[0] += trick_score[0]
    game_score[1] += trick_score[1]
    if game_score[0] >= 10:
        print('Team 1/3 wins {} to {}'.format(game_score[0], game_score[1]))
        return False
    elif game_score[1] >= 10:
        print('Team 2/4 wins {} to {}'.format(game_score[1], game_score[0]))
        return False
    else:
        print('The game score is now Team 1/3: {} Team 2/4: {}'.format(game_score[0], game_score[1]))
    return game_score
